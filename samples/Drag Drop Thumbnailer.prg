{
  "progName": "Drag Drop Thumbnailer",
  "htmlText": "<style> /* Simple styles for the file drop target */\n    #droptarget { border: solid black 2px; width: 200px; height: 200px; }\n    #droptarget.active { border: solid red 4px; }\n</style>\n\n<div id=\"droptarget\">Drop Image Files Here</div>\n",
  "scriptText": "// At the time of this writing, Firefox and Webkit disagree on the\n// name of the createObjectURL() function\nvar getBlobURL = (window.URL && URL.createObjectURL.bind(URL)) ||\n    (window.webkitURL && webkitURL.createObjectURL.bind(webkitURL)) ||\n    window.createObjectURL;\nvar revokeBlobURL = (window.URL && URL.revokeObjectURL.bind(URL)) ||\n    (window.webkitURL && webkitURL.revokeObjectURL.bind(webkitURL)) ||\n    window.revokeObjectURL;\n\nDoInit();\n\n// When the document is loaded, add event handlers to the droptarget element\n// so that it can handle drops of files\nfunction DoInit() {\n    // Find the element we want to add handlers to.\n    var droptarget = document.getElementById(\"droptarget\");\n\n    // When the user starts dragging files over the droptarget, highlight it.\n    droptarget.ondragenter = function(e) {\n        // If the drag is something other than files, ignore it.\n        // The HTML5 dropzone attribute will simplify this when implemented.\n        var types = e.dataTransfer.types;\n        if (!types ||\n            (types.contains && types.contains(\"Files\")) ||\n            (types.indexOf && types.indexOf(\"Files\") != -1)) {\n            droptarget.classList.add(\"active\"); // Highlight droptarget\n            return false;                       // We're interested in the drag\n        }\n    };\n    // Unhighlight the drop zone if the user moves out of it\n    droptarget.ondragleave = function() {\n        droptarget.classList.remove(\"active\");\n    };\n\n    // This handler just tells the browser to keep sending notifications\n    droptarget.ondragover = function(e) { return false; };\n\n    // When the user drops files on us, get their URLs and display thumbnails.\n    droptarget.ondrop = function(e) {\n        var files = e.dataTransfer.files;            // The dropped files\n        for(var i = 0; i < files.length; i++) {      // Loop through them all\n            var type = files[i].type;\n            if (type.substring(0,6) !== \"image/\")    // Skip any nonimages\n                continue;\n            var img = document.createElement(\"img\"); // Create an <img> element\n            img.src = getBlobURL(files[i]);          // Use Blob URL with <img>\n            img.onload = function() {                // When it loads\n                this.width = 100;                    // adjust its size and\n                // following line was modified to add to correct place in trident sandbox\n                document.getElementById('UI_MainPlaceholder').appendChild(this);     \n                revokeBlobURL(this.src);             // But don't leak memory!\n            };\n        }\n\n        droptarget.classList.remove(\"active\");       // Unhighlight droptarget\n        return false;                                // We've handled the drop\n    };\n}\n"
}