{
  "progName": "WebGL Spinning Box",
  "htmlText": "<!-- The current distribution of three.JS javascript library only includes the main javascript file \n\tThis means only basic functionality is supported out of the box.  \n\tIf you want full functionality, download the full ~ 84mb library from http://threejs.org/  \n\tput contents under tridentsandbox libraries\n\tand modify tridentsandbox.htm to reference any additional scripts -->\n\n<h3>WebGL spinning cube using three.JS</h3>\n\n<div id=\"container\"></div>\n",
  "scriptText": "var isIE10 = (navigator.userAgent.indexOf(\"MSIE 10.0;\") != -1); \n\nif (isIE10) alertify.error(\"WebGL is not supported in IE 10 :(\");\n\n// revolutions per second\nvar angularSpeed = 0.2; \nvar lastTime = 0;\n \n// this function is executed on each animation frame\nfunction animate(){\n        // update\n        var time = (new Date()).getTime();\n        var timeDiff = time - lastTime;\n        var angleChange = angularSpeed * timeDiff * 2 * Math.PI / 1000;\n        cube.rotation.y += angleChange;\n        lastTime = time;\n \n        // render\n        renderer.render(scene, camera);\n \n        // request new frame\n        requestAnimationFrame(function(){\n            animate();\n        });\n}\n\n// renderer\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(400, 400);\ndocument.getElementById('container').appendChild(renderer.domElement);\n \n// camera : If you cange the renderer setSize, update the aspect calculation below (400/400)\nvar camera = new THREE.PerspectiveCamera(45, 400 / 400, 1, 1000);\ncamera.position.z = 500;\n \n// scene\nvar scene = new THREE.Scene();\n                \n// cube\nvar cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), new THREE.MeshNormalMaterial());\ncube.overdraw = true;\nscene.add(cube);\n \n// start animation\nanimate();"
}