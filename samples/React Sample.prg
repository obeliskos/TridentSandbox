{
  "progName": "React Sample",
  "htmlText": "<h3>React and JSX Sample</h3>\n\n<p>\n    Trident Sandbox includes and supports using the react.js library.  It's support of JSX \n    is a little tenuous, perhaps being better suited to use with markup units.  This example \n    demonstrates both means of usage.\n</p>\n\n<button class=\"minimal\" onclick=\"demoReact()\">React</button> \n<button class=\"minimal\" onclick=\"demoJSX()\">React JSX</button>\n<br/><br/>\n<div id=\"div-mount\"></div>\n",
  "scriptText": "function demoReact() {\n    var HelloMessage = React.createClass(\n        {\n            displayName: \"HelloMessage\",\n            render: function() {\n                return React.createElement(\"div\", null, \"Hello React \", this.props.name);\n            }\n        });\n    \n    React.render(React.createElement(HelloMessage, {name:\"John\"}), document.getElementById(\"div-mount\"));\n}\n\nfunction demoJSX() {\n    // Ideally you might store your JSX in markup units to be recalled similarly to this :\n\n    //sandbox.units.getMarkupUnit(\"HelloReact\", function(val) {\n    //    var componentJS = JSXTransformer.transform(val, {harmony:false}).code;\n    //    sandbox.units.appendScriptUnit(componentJS, function() {\n    //        React.render(React.createElement(HelloMessage, {name:\"John\"}), document.getElementById(\"div-mount\"));            \n    //    });\n    //});\n\n    // ... however for this example we will just use string :\n\n    var jsxString =\n        \"var HelloMessage = \\n\" +\n        \"React.createClass({\\n\" +\n        \"  render: function() {\\n\" +\n        \"    return <div>Hello JSX {this.props.name}</div>;\\n\" +\n        \"  }\\n\" +\n        \"});\";\n\n    var componentJS = JSXTransformer.transform(jsxString, {harmony:false}).code;\n\n    // lets use sandbox script unit utility method for putting jsx transformed\n    // script into web page.\n    sandbox.units.appendScriptUnit(componentJS, function() {\n        React.render(React.createElement(HelloMessage, {name:\"John\"}), document.getElementById(\"div-mount\"));            \n    });\n    \n    // lets log the jsx transformed script\n    sandbox.logger.log(componentJS);\n    \n    // currently its best to save jsx as a 'markup' unit so we can 'get' it as a string.\n    // however we transform it into a script (component) which we use script unit utility\n    // function to add to page.  If you use want to use jsx in Trident Sandbox, this is \n    // the best way to handle this for now.\n}"
}