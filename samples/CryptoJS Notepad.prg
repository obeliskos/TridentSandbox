{
  "progName": "CryptoJS Notepad",
  "htmlText": "<h3>Crypto.JS Notepad</h3>\n\n<table style='width:100%;background-color:#ddd'>\n    <tr style='background-color:#ddd'>\n        <td style='padding:5px'>Note Name : <input type='text' id='txtNoteName' style='width:150px; height:24px;'/>&nbsp;\n            <button style=\"height:34px\" id='btnSave' title='Save to Trident DB' onclick='saveNote()'><i class=\"fa fa-floppy-o\"></i></button>&nbsp;\n            <button style=\"height:34px\" title='New' onclick='newNote()'><i class=\"fa fa-file-o\"></i></button>&nbsp;\n            <button style=\"height:34px\" title='Export / Save Locally' onclick='exportNote()'><i class=\"fa fa-download\"></i></button>&nbsp;\n            <button style=\"height:34px\" title='Import / Load Local File' onclick='importNote()'><i class=\"fa fa-arrow-up\"></i></button>\n        </td>\n        <td>\n            <div id='divDbActions' style='display:inline'>\n                Notes List : <select id='selNotes' onchange='noteSelected()'></select>&nbsp;\n                <button style=\"height:34px\" title='Delete selected note from Trident DB' onclick='deleteNote()'><i class=\"fa fa-trash-o\"></i></button>\n            </div>\n        </td>\n    </tr>\n</table>\n\n<textarea id=\"txtNoteContent\" name=\"divContent\" style=\"width:100%; height:400px\"></textarea>\n\n<div id='divPassword' style='display:none'>\n    <i class=\"fa fa-key\"></i> Enter Password : \n    <input id='txtDialogPassword'  onKeyDown=\"if (event.keyCode==13) sandboxVars.dlgOkButton.focus()\" type='password'/>\n</div>\n\n<input type='hidden' id='hfPassword'/>",
  "scriptText": "var sandboxVars = {\n    //area1var : new nicEditor({fullPanel : true}).panelInstance('area1'),\n    dlgOkButton : null,\n    tmce : null\n};\n\nsandbox.events.clean = function() {\n    tinymce.remove();\n};\n\nsandboxVars.tmce = tinymce.init({\n    setup : function(ed) {\n        ed.on('init', function() {\n            this.getDoc().body.style.fontSize = '20px';\n            this.getDoc().body.style.fontFamily = 'Helvetica';\n        });\n    },\n    selector: \"#txtNoteContent\",\n    theme: \"modern\",\n    plugins: [\n        \"advlist autolink lists link image charmap print preview hr anchor pagebreak\",\n        \"searchreplace wordcount visualblocks visualchars code fullscreen\",\n        \"insertdatetime media nonbreaking save table contextmenu directionality\",\n        \"emoticons template paste textcolor moxiemanager\"\n    ],\n    toolbar1: \"code searchreplace undo redo | styleselect | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview | forecolor backcolor emoticons | fullscreen\",\n    image_advtab: true\n\n});\n\nsandbox.events.windowResize = function() {\n    var resizeHeight = 350;\n    \n    switch (sandbox.volatile.env) {\n        case \"IDE\" : resizeHeight = $(window).height() - 530; break;\n        case \"SBL\" : resizeHeight = $(window).height() - 240; break;\n        case \"STANDALONE\" : resizeHeight = $(window).height() - 350; break;\n        default : break;\n    }\n\n    tinyMCE.get('txtNoteContent').theme.resizeTo(\"400px\", resizeHeight);\n};\n\nsetTimeout(sandbox.events.windowResize, 200);\n\nif (!sandbox.db) {\n    $(\"#btnSave\").hide();\n    $(\"#divDbActions\").hide();\n}\n\nretrieveAllAppKeys();\n\nfunction newNote() {\n    $(\"#txtNoteName\").val(\"\");\n}\n\nfunction saveNote() {\n    var noteName = $(\"#txtNoteName\").val();\n    if (noteName === \"\") {\n        alertify.alert(\"Please enter a note name\");\n        return;\n    }\n\n    sandbox.ui.showPasswordDialog(function(pass) {\n        if (pass.length < 6) {\n            alertify.alert(\"Password must be at least six characters\");\n            return;\n        }\n\n        var htmlEditText = tinyMCE.get('txtNoteContent').getContent(); \n        var encrypted = CryptoJS.AES.encrypt(htmlEditText, pass).toString();\n\n        sandbox.db.setAppKey('CryptoNotepad', noteName, encrypted);\n\n        retrieveAllAppKeys();\n    });\n}\n\nfunction deleteNote() {\n    alertify.confirm(\"Are you sure you want to delete the selected note?\", function (e) {\n        if (e) {\n            // user clicked \"ok\"\n            $(\"#hfPassword\").val(\"\");\n\n            var objId = $(\"#selNotes option:selected\").val();\n            sandbox.db.deleteAppKey(parseInt(objId, 10));\n\n            retrieveAllAppKeys();\n\n            $(\"#txtNoteName\").val(\"\");\n\n            tinyMCE.get('txtNoteContent').setContent(\"\");\n        } \n    });\n\n}\n\n// When user changes dropdown selection, get the whole object and update text fields\nfunction noteSelected() {\n    sandbox.ui.showPasswordDialog(function(pass) {\n        var objId = $(\"#selNotes option:selected\").val();\n\n        sandbox.db.getAppKeyById(parseInt(objId, 10), function(result) {\n            if (!result) return;\n            \n            $(\"#txtNoteName\").val(result.key);\n            var encNote = result.val;\n            var decrypted = CryptoJS.AES.decrypt(encNote, pass);\n\n            tinyMCE.get('txtNoteContent').setContent(decrypted.toString(CryptoJS.enc.Utf8));\n        });\n    });\n}\n\n// Show all Trident App/Key/Val objects filtered by our app name ('CryptoNotepad') \n// We call API_GetIndexedAppCursor passing our app name and callback\n// Our callback is called for every object and we must manually advance the cursor.\nfunction retrieveAllAppKeys()\n{\n    if (!sandbox.db) return;\n\n    $(\"#selNotes\").html(\"<option></option>\");\n\n    // The anonymous function callback is called once per row returned \n    sandbox.db.getAppKeys('CryptoNotepad', function(results) {\n        results.forEach(function(obj) {\n            $('#selNotes').append($('<option>', {\n                value: obj.id,\n                text: obj.key\n            }));          \n        });\n    });\n}\n\n//\n// IMPORT EXPORT FUNCTIONS\n//\n\nfunction exportNote() {\n    sandbox.ui.showPasswordDialog(function(pass) {\n        if (pass.length < 6) {\n            alertify.alert(\"Password must be at least six characters\");\n            return;\n        }\n\n        var noteName = $(\"#txtNoteName\").val();\n        if (noteName === \"\") {\n            alertify.alert(\"Please enter a note name\");\n            return;\n        }\n\n        var htmlEditText = tinyMCE.get('txtNoteContent').getContent();\n        var encrypted = CryptoJS.AES.encrypt(htmlEditText, pass).toString();\n\n        sandbox.files.saveTextFile(noteName + '.cnp', encrypted);\n\n\n        retrieveAllAppKeys();\n    });\n}\n\nfunction importNote() {\n    sandbox.files.userfileShow();\n}\n\nsandbox.files.userfileLoaded = function(filestring, filename) {\n    sandbox.files.userfileHide();\n\n    $(\"#txtNoteName\").val(filename.replace(\".cnp\", \"\"));\n\n    sandbox.ui.showPasswordDialog(function(pass) {\n        var encNote = filestring;\n        var decrypted = CryptoJS.AES.decrypt(encNote, pass);\n\n        tinyMCE.get('txtNoteContent').setContent(decrypted.toString(CryptoJS.enc.Utf8));\n    });\n};\n\n"
}