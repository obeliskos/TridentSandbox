{
  "progName": "CryptoJS Notepad",
  "htmlText": "<h3>Crypto.JS Notepad</h3>\n\n<table style='width:100%;background-color:#ddd'>\n\t<tr style='background-color:#ddd'>\n    \t<td style='padding:5px'>Note Name : <input type='text' id='txtNoteName' style='width:150px; height:24px;'></input>&nbsp;\n        \t<button style=\"height:34px\" id='btnSave' title='Save to Trident DB' onclick='saveNote()'><i class=\"fa fa-floppy-o\"></i></button>&nbsp;\n        \t<button style=\"height:34px\" title='New' onclick='newNote()'><i class=\"fa fa-file-o\"></i></button>&nbsp;\n            <button style=\"height:34px\" title='Export / Save Locally' onclick='exportNote()'><i class=\"fa fa-download\"></i></button>&nbsp;\n            <button style=\"height:34px\" title='Import / Load Local File' onclick='importNote()'><i class=\"fa fa-arrow-up\"></i></button>\n        </td>\n        <td>\n\t\t\t<div id='divDbActions' style='display:inline'>\n\t\t\t\tNotes List : <select id='selNotes' onchange='noteSelected()'></select>&nbsp;\n            \t<button style=\"height:34px\" title='Delete selected note from Trident DB' onclick='deleteNote()'><i class=\"fa fa-trash-o\"></i></button>\n\t\t\t</div>\n        </td>\n    </tr>\n</table>\n\n<textarea id=\"txtNoteContent\" name=\"divContent\" style=\"width:100%; height:400px\"></textarea>\n\n<div id='divPassword' style='display:none'>\n<i class=\"fa fa-key\"></i> Enter Password : \n<input id='txtDialogPassword'  onKeyDown=\"if (event.keyCode==13) sandboxVars.dlgOkButton.focus()\" type='password'></input>\n</div>\n\n<input type='hidden' id='hfPassword'></input>",
  "scriptText": "var sandboxVars = {\n\t//area1var : new nicEditor({fullPanel : true}).panelInstance('area1'),\n    dlgOkButton : null,\n    tmce : null\n}\n\nfunction EVT_CleanSandbox() {\n    tinymce.remove();\n}\n\nsandboxVars.tmce = tinymce.init({\n    selector: \"#txtNoteContent\",\n    theme: \"modern\",\n    plugins: [\n        \"advlist autolink lists link image charmap print preview hr anchor pagebreak\",\n        \"searchreplace wordcount visualblocks visualchars code fullscreen\",\n        \"insertdatetime media nonbreaking save table contextmenu directionality\",\n        \"emoticons template paste textcolor moxiemanager\"\n    ],\n    toolbar1: \"code searchreplace undo redo | styleselect | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview | forecolor backcolor emoticons | fullscreen\",\n    image_advtab: true\n\n});\n\nfunction EVT_WindowResize() {\n    var resizeHeight = 350;\n    switch (VAR_TRIDENT_ENV_TYPE) {\n        case \"IDE\" : resizeHeight = $(window).height() - 530; break;\n        case \"SBL\" : resizeHeight = $(window).height() - 240; break;\n        case \"STANDALONE\" : resizeHeight = $(window).height() - 350; break;\n        default : break;\n    }\n    \n\ttinyMCE.get('txtNoteContent').theme.resizeTo(\"400px\", resizeHeight);\n}\n\nsetTimeout(function() { EVT_WindowResize(); }, 200);\n\n\n\nif (!window.indexedDB) {\n\t$(\"#btnSave\").hide();\n    $(\"#divDbActions\").hide();\n}\n\nretrieveAllAppKeys();\n\nfunction newNote() {\n\t$(\"#txtNoteName\").val(\"\");\n}\n\nfunction saveNote() {\n\tvar noteName = $(\"#txtNoteName\").val();\n\tif (noteName == \"\") {\n\t\talertify.alert(\"Please enter a note name\");\n\t\treturn;\n\t}\n\n\tAPI_ShowPasswordDialog(function(pass) {\n\t\tif (pass.length < 6) {\n\t\t\talertify.alert(\"Password must be at least six characters\");\n\t\t\treturn;\n\t\t}\n    \n\t\tvar htmlEditText = tinyMCE.get('txtNoteContent').getContent(); \n\t\tvar encrypted = CryptoJS.AES.encrypt(htmlEditText, pass).toString();\n\n\t\tAPI_SetIndexedAppKey('CryptoNotepad', noteName, encrypted);\n    \n\t\tretrieveAllAppKeys();\n\t});\n}\n\nfunction deleteNote() {\n\talertify.confirm(\"Are you sure you want to delete the selected note?\", function (e) {\n    \t\tif (e) {\n        \t\t// user clicked \"ok\"\n                $(\"#hfPassword\").val(\"\");\n                \n   \t\t\t\tvar objId = $(\"#selNotes option:selected\").val();\n              \tAPI_DelIndexedAppKey(parseInt(objId));\n                \n    \t\t\tretrieveAllAppKeys();\n                \n                $(\"#txtNoteName\").val(\"\");\n                \n                tinyMCE.get('txtNoteContent').setContent(\"\");\n    \t\t} \n\t});\n\t\n}\n\n// When user changes dropdown selection, get the whole object and update text fields\nfunction noteSelected() {\n\tAPI_ShowPasswordDialog(function(pass) {\n\t\tvar objId = $(\"#selNotes option:selected\").val();\n\n\t\tAPI_GetIndexedAppKeyById(parseInt(objId), function(e) {\n\t\t\tvar res = e.target.result;\n\t\t\t$(\"#txtNoteName\").val(res.key);\n\t\t\tvar encNote = res.val;\n\t\t\tvar decrypted = CryptoJS.AES.decrypt(encNote, pass);\n\n\t\t\ttinyMCE.get('txtNoteContent').setContent(decrypted.toString(CryptoJS.enc.Utf8));\n\t\t});\n\t});\n}\n\n// Show all Trident App/Key/Val objects filtered by our app name ('CryptoNotepad') \n// We call API_GetIndexedAppCursor passing our app name and callback\n// Our callback is called for every object and we must manually advance the cursor.\nfunction retrieveAllAppKeys()\n{\n\tif (!window.indexedDB) return;\n    \n    $(\"#selNotes\").html(\"<option></option>\");\n  \n  \t// The anonymous function callback is called once per row returned \n\tAPI_GetIndexedAppCursor('CryptoNotepad', function(e) {\n\t  \tvar cursor = e.target.result;\n      \n\t\tif(cursor) {\n          \tvar currObject = cursor.value;\n          \n\t\t\t$('#selNotes').append($('<option>', {\n    \t\t\tvalue: currObject.id,\n    \t\t\ttext: currObject.key\n\t\t\t}));          \n          \n            cursor.continue();\n\t\t}\n\t});\n}\n\n//\n// IMPORT EXPORT FUNCTIONS\n//\n\nfunction exportNote() {\n\tAPI_ShowPasswordDialog(function(pass) {\n\t\tif (pass.length < 6) {\n\t\t\talertify.alert(\"Password must be at least six characters\");\n\t\t\treturn;\n\t\t}\n    \n\t\tvar noteName = $(\"#txtNoteName\").val();\n\t\tif (noteName == \"\") {\n\t\t\talertify.alert(\"Please enter a note name\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar htmlEditText = tinyMCE.get('txtNoteContent').getContent();\n\t\tvar encrypted = CryptoJS.AES.encrypt(htmlEditText, pass).toString();\n\n\t\tAPI_SaveTextFile(noteName + '.cnp', encrypted)\t\n\n    \n\t\tretrieveAllAppKeys();\n\t});\n}\n\nfunction importNote() {\n\tAPI_ShowLoad();\n}\n\nfunction EVT_UserLoadCallback(filestring, filename) {\n\tAPI_HideUserLoader();\n    \n    $(\"#txtNoteName\").val(filename.replace(\".cnp\", \"\"));\n    \n\tAPI_ShowPasswordDialog(function(pass) {\n\t\tvar encNote = filestring;\n\t\tvar decrypted = CryptoJS.AES.decrypt(encNote, pass);\n\n\t\ttinyMCE.get('txtNoteContent').setContent(decrypted.toString(CryptoJS.enc.Utf8));\n\t});\n}\n\n"
}