{
  "progName": "Trident DB Usage",
  "htmlText": "<h3>Trident DB Usage</h3>\n\nTotal Size used by Trident DB : <span id='spnTotalSize'></span> <br/><br/>\n\n<div id=\"chart1\" ></div><br/>\n<span id='spnKeySize'></span> <br/>\n<select id=\"selTridentDB\" size=14 onchange=\"selChanged()\"></select><br/>\n<button style=\"height:40px; width:120px\" onclick=\"deleteKey()\">Delete</button>\n<button style=\"height:40px; width:120px\" onclick=\"renameKey()\">Rename</button>\n<input type='text' id='txtKeyName' style='width:400px'/><br/>\n<textarea rows='5' cols='80' id='txtTridentValue'></textarea>\n\n",
  "scriptText": "var sbv = {\n\tarrayLS : [],\n    totalSize : 0,\n\tplot1 : null\n}\n\nfunction EVT_CleanSandbox() {\n\tdelete sbv.arrayLS;\n\n\tif (sbv.plot1) {\n\t\tsbv.plot1.destroy();\n\t}\n\n\n\tdelete sbv.plot1;\n}\n\nif (!VAR_TRIDENT_DB) {\n\talertify.log(\"This sample only works in a hosted or appcache environment\");\n}\nelse {\n\tloadTridentDB();\n}\n\nfunction loadTridentDB() {\n    \n\t$(\"#txtTridentValue\").val(\"\");\n\t$(\"#spnKeySize\").text(\"Size : \");\n    \n\t// if already plotted, destroy old plot before replotting\n\tif (sbv.plot1) {\n\t\tsbv.plot1.destroy();\n\t}\n    \n    // clear array of [key,sizes]\n    sbv.arrayLS = [];\n\n\t// repopulate the listbox while simulatenously building the arrayLS data for plot\n\t$(\"#selTridentDB\").html(\"\");\n\t\n    //var totalSize = 0;\n    sbv.totalSize = 0;\n\n\tAPI_GetCursor(function(e) {\n\t  \tvar cursor = e.target.result;\n\t\tif(cursor) {\n          \tvar currObject = cursor.value;\n          \n\t\t\t$('#selTridentDB').append($('<option>', {\n    \t\t\tvalue: currObject.id,\n    \t\t\ttext: currObject.app + \";\" + currObject.key\n\t\t\t}));          \n          \n          \tvar keySize = currObject.val.length;\n            sbv.totalSize += keySize;\n            \n            sbv.arrayLS.push([currObject.key.slice(0,20), keySize]);\n            cursor.continue();\n\t\t}\n      \n\t});\n\n\t// Cursor above gets called asynchronously so lets just give about 1/2 sec for it \n    // to finish before using the stats it generated.\n\tsetTimeout(function() {\n    \t$(\"#spnTotalSize\").text(sbv.totalSize);\n        \n\t\tsbv.plot1 = jQuery.jqplot ('chart1', [sbv.arrayLS], \n    \t{ \n      \t\tseriesDefaults: {\n        \t\t// Make this a pie chart.\n        \t\trenderer: jQuery.jqplot.PieRenderer, \n        \t\trendererOptions: {\n          \t\t\t// Put data labels on the pie slices.\n          \t\t\t// By default, labels show the percentage of the slice.\n          \t\t\tshowDataLabels: true,\n          \t\t\tdataLabels: ['label']\n        \t\t}\n      \t\t}, \n      \t\tlegend: { show:true, location: 'e' }\n    \t});\n    }, 500);\n\n}\n\nfunction selChanged() {\n\tvar key = $(\"#selTridentDB option:selected\").val();\n\n  \tAPI_GetIndexedAppKeyById(parseInt(key), function(e) {\n\t\tvar res = e.target.result;\n        $(\"#txtKeyName\").val(res.key);\n      \t$(\"#txtTridentValue\").val(res.val);\n      \t$(\"#spnKeySize\").text(\"Size : \" + res.val.length);\n    });\n}\n\nfunction deleteKey() {\n   \tvar objId = $(\"#selTridentDB option:selected\").val();\n\n\t// confirm object deletion\n\talertify.confirm(\"Are you sure you want to delete object with id \" + objId, function (e) {\n    \t\tif (e) {\n        \t\t// user clicked \"ok\"\n              \tAPI_DelIndexedAppKey(parseInt(objId));\n\n              \tsetTimeout(function () { loadTridentDB() }, 250);\n    \t\t}\n\t});\n}\n\nfunction renameKey() {\n   \tvar objId = $(\"#selTridentDB option:selected\").val();\n\n\t// confirm object deletion\n\talertify.confirm(\"Are you sure you want to rename object with id \" + objId, function (e) {\n    \t\tif (e) {\n        \t\t// user clicked \"ok\"\n  \t\t\t\tAPI_GetIndexedAppKeyById(parseInt(objId), function(e) {\n\t\t\t\t\tvar res = e.target.result;\n        \t\t\t\n                    API_SetIndexedAppKey(res.app, $(\"#txtKeyName\").val(), res.val);\n              \t\tAPI_DelIndexedAppKey(parseInt(objId));\n    \t\t\t});\n\n              \tsetTimeout(function () { loadTridentDB() }, 250);\n    \t\t}\n\t});\n}\n\n// We dont want to filter by app so we will write our own function to cursor over ALL keys\n// If you need to do similar functionality just copy this function into your prg\n// Dont really want to encourage looking outside your app scope though so not going to add \n// to main page.\nfunction API_GetCursor(callback) {\n\tvar transaction = VAR_TRIDENT_DB.transaction([\"TridentSandboxKVP\"], \"readonly\");\n\tvar store = transaction.objectStore(\"TridentSandboxKVP\");\n\n\tvar cursor = store.openCursor();\n \n\tcursor.onsuccess = callback;\n}\n\n"
}