{
  "progName": "Trident DB Usage",
  "htmlText": "<style>\nfieldset { \n\tpadding: 1em;\n    font:80%/1 sans-serif;\n\tborder:1px solid black; \n}\nlabel.lb4 {\n\tfloat:left;\n    width:15%;\n    margin-right:0.5em;\n    padding-top:0.2em;\n    text-align:right;\n    font-weight:bold;\n}\n\nlegend {\n    padding: 0.2em 0.5em;\n    border:1px solid black;\n    color:black;\n    font-size:90%;\n    text-align:right;\n}\n\n</style>\n\n<h3>Trident DB Usage</h3>\n\n<table>\n<tr>\n<td>\n\tTrident DB size total : <span id='spnTotalSize'></span>\n</td>\n<td>\n\t<span id='spnKeySize'></span> \n</td>\n</tr>\n<tr>\n<td valign='top'><div id=\"chart1\" style=\"width:320px\" ></div><br/></td>\n<td valign='top'>\n\t<br/>\n    <select id=\"selTridentDB\" size=12 onchange=\"selChanged()\"></select><br/>\n</td>\n</tr>\n</table>\n\n<fieldset>\n\t<legend>Trident Key Settings :</legend>\n\t<input type='text' id='txtKeyName' style='width:400px'/>\n\t<label class=\"lb4\" for=\"txtKeyName\">Key Name : </label><br/><br/>\n\t<textarea spellcheck='false' style=\"width:80%; height:160px;\" id='txtTridentValue'></textarea>\n    <label class=\"lb4\" for=\"txtTridentValue\">Key Value : </label><br/><br/>\n\t<span style=\"float:left; margin-left:200px\">\n\t\t<button class=\"minimal\" onclick=\"doUpdate();\"><i class=\"fa fa-save\"></i> Update</button>\n\t\t<button class=\"minimal\" onclick=\"doDelete();\"><i class=\"fa fa-trash-o\"></i> Delete</button>\n\t</span>\n</fieldset>\n\n",
  "scriptText": "var sbv = {\n\tarrayLS : [],\n    totalSize : 0,\n\tplot1 : null\n}\n\nfunction EVT_CleanSandbox() {\n\tdelete sbv.arrayLS;\n\n\tif (sbv.plot1) {\n\t\tsbv.plot1.destroy();\n\t}\n\n\n\tdelete sbv.plot1;\n}\n\nif (!VAR_TRIDENT_DB) {\n\talertify.log(\"This sample only works in a hosted or appcache environment\");\n}\nelse {\n\tloadTridentDB();\n}\n\nfunction loadTridentDB() {\n    \n\t$(\"#txtTridentValue\").val(\"\");\n\t$(\"#spnKeySize\").text(\"Key Size : \");\n    \n    $(\"#txtKeyName\").val(\"\");\n    $(\"#txtTridentValue\").text(\"\");\n    \n\t// if already plotted, destroy old plot before replotting\n\tif (sbv.plot1) {\n\t\tsbv.plot1.destroy();\n\t}\n    \n    // clear array of [key,sizes]\n    sbv.arrayLS = [];\n\n\t// repopulate the listbox while simulatenously building the arrayLS data for plot\n\t$(\"#selTridentDB\").html(\"\");\n\t\n    //var totalSize = 0;\n    sbv.totalSize = 0;\n\n\tAPI_GetCursor(function(e) {\n\t  \tvar cursor = e.target.result;\n\t\tif(cursor) {\n          \tvar currObject = cursor.value;\n          \n\t\t\t$('#selTridentDB').append($('<option>', {\n    \t\t\tvalue: currObject.id,\n    \t\t\ttext: currObject.app + \";\" + currObject.key\n\t\t\t}));          \n          \n          \tvar keySize = currObject.val.length;\n            sbv.totalSize += keySize;\n            \n            sbv.arrayLS.push([currObject.key.slice(0,20), keySize]);\n            cursor.continue();\n\t\t}\n        else {\n            $(\"#spnTotalSize\").text(sbv.totalSize + \" bytes\");\n\n            sbv.plot1 = jQuery.jqplot ('chart1', [sbv.arrayLS], \n            { \n                seriesDefaults: {\n                    // Make this a pie chart.\n                    renderer: jQuery.jqplot.PieRenderer, \n                    rendererOptions: {\n                        // Put data labels on the pie slices.\n                        // By default, labels show the percentage of the slice.\n                        showDataLabels: true\n                    }\n                }, \n\t\t\t\tlegend: { show:false, location: 'e' },\n\t\t\t\thighlighter: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tformatString:'%s', \n\t\t\t\t\ttooltipLocation:'sw', \n\t\t\t\t\tuseAxesFormatters:false\n\t\t\t\t}\n            });\n        }\n      \n\t});\n\n}\n\nfunction selChanged() {\n\tvar key = $(\"#selTridentDB option:selected\").val();\n\n  \tAPI_GetIndexedAppKeyById(parseInt(key), function(e) {\n\t\tvar res = e.target.result;\n        $(\"#txtKeyName\").val(res.key);\n      \t$(\"#txtTridentValue\").val(res.val);\n      \t$(\"#spnKeySize\").text(\"Key Size : \" + res.val.length + \" bytes\");\n    });\n}\n\nfunction doDelete() {\n   \tvar objId = $(\"#selTridentDB option:selected\").val();\n\n\tif (objId == null) return;\n\n\t// confirm object deletion\n\talertify.confirm(\"Are you sure you want to delete object with id \" + objId, function (e) {\n    \t\tif (e) {\n        \t\t// user clicked \"ok\"\n              \tAPI_DelIndexedAppKey(parseInt(objId));\n\n              \tsetTimeout(function () { loadTridentDB() }, 250);\n    \t\t}\n\t});\n}\n\nfunction doUpdate() {\n   \tvar objId = $(\"#selTridentDB option:selected\").val();\n\n\tif (objId == null) return;\n\n\t// confirm object deletion\n\talertify.confirm(\"Are you sure you want to rename object with id \" + objId, function (e) {\n    \t\tif (e) {\n        \t\t// user clicked \"ok\"\n  \t\t\t\tAPI_GetIndexedAppKeyById(parseInt(objId), function(e) {\n\t\t\t\t\tvar res = e.target.result;\n        \t\t\t\n                    var kn = $(\"#txtKeyName\").val();\n                    var kv = $(\"#txtTridentValue\").text();\n                    \n                    API_SetIndexedAppKey(res.app, kn, kv);\n              \t\tAPI_DelIndexedAppKey(parseInt(objId));\n    \t\t\t});\n\n              \tsetTimeout(function () { loadTridentDB() }, 250);\n    \t\t}\n\t});\n}\n\n// We dont want to filter by app so we will write our own function to cursor over ALL keys\n// If you need to do similar functionality just copy this function into your prg\n// Dont really want to encourage looking outside your app scope though so not going to add \n// to main page.\nfunction API_GetCursor(callback) {\n\tvar transaction = VAR_TRIDENT_DB.transaction([\"TridentSandboxKVP\"], \"readonly\");\n\tvar store = transaction.objectStore(\"TridentSandboxKVP\");\n\n\tvar cursor = store.openCursor();\n \n\tcursor.onsuccess = callback;\n}\n\n"
}