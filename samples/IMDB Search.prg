{
  "progName": "IMDB Search",
  "htmlText": "<h3>IMDB Movie Lookup</h3>\n\n<h5>Enter Movie Name</h5>\n\n<input id='txtMovieName'></input>\n<button onclick='lookup()'>Lookup Movie</button>\n<br/><br/>\n\n<table id=\"movies\"></table>\n<div id=\"moviePager\"></div>\n\n",
  "scriptText": "var sandboxVars = {\n    gridData: null,\n    grid: $(\"#movies\")\n};\n\nfunction EVT_CleanSandbox() {\n    delete sandboxVars.gridData;\n    delete sandboxVars.grid;\n}\n\nfunction lookup() \n{\n    var url = \"http://www.imdb.com/xml/find?json=1&q=\" + $(\"#txtMovieName\").val();\n    sandbox.logger.log(url);\n\n    jQuery.ajax({\n        type: \"GET\",\n        url: url,\n        dataType: \"json\",\n        success: function (response) {\n            if (response.title_popular === undefined) {\n                alertify.error(\"No results for \" + $(\"#txtMovieName\").val());\n            }\n\n            // the url response in this case should be a valid json object\n            // let's loop through some of its properties and log the info\n            for(i=0; i<response.title_popular.length; i++)\n            {\n                API_LogMessage(response.title_popular[i].id);\n                API_LogMessage(response.title_popular[i].title);\n                API_LogMessage(response.title_popular[i].description);\n            }\n\n            // Now lets put results into a jqgrid, fortunately for us the \n            // title_popular is an array of objects which already have an 'id' column\n            // jqGrid needs this as a unique id.. otherwise we would have had to \n            // retructure the json to add an id column and give it a unique code\n            sandboxVars.gridData = {\n                \"page\": \"1\",\n                \"records\": response.title_popular.length,\n                \"rows\": response.title_popular\n            };\n\n            loadGrid();\n        },\n        error: function (xhr, ajaxOptions, thrownError) {\n            alertify.log(xhr.status + \" : \" + xhr.statusText);\n        }\n    });\n}\n\nfunction refreshGrid() {\n    // this is how to refresh grid when using jsonstring local data\n    $(\"#movies\").setGridParam({\n        datastr: sandboxVars.gridData,\n        datatype: \"jsonstring\" // !!! reset datatype\n    }).trigger(\"reloadGrid\");\n}\n\nfunction loadGrid () {\n\n    // if movies grid has already been initialized, then do a refresh with new data instead\n    if ($(\"#movies\")[0].grid) {\n        refreshGrid();\n        return;\n    }\n\n    sandboxVars.grid.jqGrid({\n        colModel: [\n            { name: 'id', index: 'id', width: \"140\", formatter: lnkFormatter },\n            { name: 'title', index: 'title', width: \"240\" },\n            { name: 'description', index: 'description', width: \"300\", formatter: descFormatter }\n        ],\n        pager: '#moviePager',\n        datatype: \"jsonstring\",\n        datastr: sandboxVars.gridData,\n        jsonReader: { repeatitems: false },\n        viewrecords: true,\n        caption: \"Movie Results\",\n        height: \"auto\",\n        ignoreCase: true\n    });\n\n    sandboxVars.grid.jqGrid('navGrid', '#moviePager',\n                            { add: false, edit: false, del: false }, {}, {}, {},\n                            { multipleSearch: true, multipleGroup: true });\n\n    sandboxVars.grid.jqGrid('filterToolbar', { defaultSearch: 'cn', stringResult: true });\n}\n\n// Fix up id column to render as a link \nfunction lnkFormatter(cellvalue, options, rowObject) {\n    return \"<a href='\" + \"http://www.imdb.com/title/\" + options.rowId + \"' target='_blank'>View IMDB Page</a>\";\n}\n\n// Tranform how the description column renders... it had an embedded link tag which was relative to the imdb root \n// also make the link target blank so it opens in a new window so TridentSandbox and your program is not unloaded\nfunction descFormatter(cellvalue, options, rowObject) {\n    return rowObject.description.replace(\"<a href='\", \"<a href='http://www.imdb.com\").replace(\"'>\", \"', target='_blank'>\");\n}\n\n\n"
}