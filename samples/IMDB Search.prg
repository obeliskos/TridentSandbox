{
  "progName": "IMDB Search",
  "htmlText": "<h3>IMDB Movie Lookup</h3>\n\n<h5>Enter Movie Name</h5>\n\n<input id='txtMovieName'></input>\n<button onclick='lookup()'>Lookup Movie</button>\n<br/><br/>\n\n<table id=\"movies\"></table>\n<div id=\"moviePager\"></div>\n\n",
  "scriptText": "var sandboxVars = {\n  gridData: null,\n  grid: $(\"#movies\")\n}\n\nfunction EVT_CleanSandbox() {\n\tdelete sandboxVars.gridData;\n  \tdelete sandboxVars.grid;\n}\n\nfunction lookup() \n{\n\tvar url = \"http://www.imdb.com/xml/find?json=1&q=\" + $(\"#txtMovieName\").val();\n\n\tjQuery.ajax({\n\t\ttype: \"GET\",\n\t\turl: url,\n\t\tdataType: \"json\",\n\t\tsuccess: function (response) {\n\t\t\tif (response.title_popular == undefined) {\n\t\t\t\talertify.error(\"No results for \" + $(\"#txtMovieName\").val());\n\t\t\t}\n\t\t\t\n\t\t\t// the url response in this case should be a valid json object\n\t\t\t// let's loop through some of its properties and log the info\n\t\t\tfor(i=0; i<response.title_popular.length; i++)\n\t\t\t{\n\t\t\t\tAPI_LogMessage(response.title_popular[i].id);\n\t\t\t\tAPI_LogMessage(response.title_popular[i].title);\n\t\t\t\tAPI_LogMessage(response.title_popular[i].description);\n\t\t\t}\n\t\t\t\t\n\t\t\t// Now lets put results into a jqgrid, fortunately for us the \n\t\t\t// title_popular is an array of objects which already have an 'id' column\n\t\t\t// jqGrid needs this as a unique id.. otherwise we would have had to \n\t\t\t// retructure the json to add an id column and give it a unique code\n\t\t\tsandboxVars.gridData = {\n            \t\t\t\"page\": \"1\",\n            \t\t\t\"records\": response.title_popular.length,\n            \t\t\t\"rows\": response.title_popular\n        \t\t};\n        \t\t\t\n\t\t\tloadGrid();\n\t      \t},\n\t\terror: function (xhr, ajaxOptions, thrownError) {\n\t\t        \talertify.log(xhr.status + \" : \" + xhr.statusText);\n \t     \t}\n\t});\n}\n\nfunction refreshGrid() {\n\t// this is how to refresh grid when using jsonstring local data\n\t$(\"#movies\").setGridParam({\n\t    datastr: sandboxVars.gridData,\n\t    datatype: \"jsonstring\" // !!! reset datatype\n\t}).trigger(\"reloadGrid\");\n}\n\nfunction loadGrid () {\n\n    // if movies grid has already been initialized, then do a refresh with new data instead\n    if ($(\"#movies\")[0].grid) {\n    \trefreshGrid();\n    \treturn;\n    }\n    \n    sandboxVars.grid.jqGrid({\n        colModel: [\n            { name: 'id', index: 'id', width: \"140\", formatter: lnkFormatter },\n            { name: 'title', index: 'title', width: \"240\" },\n            { name: 'description', index: 'description', width: \"300\", formatter: descFormatter }\n        ],\n        pager: '#moviePager',\n        datatype: \"jsonstring\",\n        datastr: sandboxVars.gridData,\n        jsonReader: { repeatitems: false },\n        viewrecords: true,\n        caption: \"Movie Results\",\n        height: \"auto\",\n        ignoreCase: true\n    });\n    \n    sandboxVars.grid.jqGrid('navGrid', '#moviePager',\n        { add: false, edit: false, del: false }, {}, {}, {},\n        { multipleSearch: true, multipleGroup: true });\n        \n    sandboxVars.grid.jqGrid('filterToolbar', { defaultSearch: 'cn', stringResult: true });\n};\n\n// Fix up id column to render as a link \nfunction lnkFormatter(cellvalue, options, rowObject) {\n\treturn \"<a href='\" + \"http://www.imdb.com/title/\" + options.rowId + \"' target='_blank'>View IMDB Page</a>\";\n}\n\n// Tranform how the description column renders... it had an embedded link tag which was relative to the imdb root \n// also make the link target blank so it opens in a new window so TridentSandbox and your program is not unloaded\nfunction descFormatter(cellvalue, options, rowObject) {\n\treturn rowObject.description.replace(\"<a href='\", \"<a href='http://www.imdb.com\").replace(\"'>\", \"', target='_blank'>\");\n}\n\n\n"
}