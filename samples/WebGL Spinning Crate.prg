{
  "progName": "WebGL Spinning Crate",
  "htmlText": "<h3>WebGL textured crate using three.JS</h3>\n\n<div id=\"container\"></div>\n",
  "scriptText": "// revolutions per second\nvar angularSpeed = 0.2; \nvar lastTime = 0;\n \n// this function is executed on each animation frame\nfunction animate(){\n        // update\n        var time = (new Date()).getTime();\n        var timeDiff = time - lastTime;\n        var angleChange = angularSpeed * timeDiff * 2 * Math.PI / 1000;\n        cube.rotation.y += angleChange;\n        lastTime = time;\n \n        // render\n        renderer.render(scene, camera);\n \n        // request new frame\n        requestAnimationFrame(function(){\n            animate();\n        });\n}\n \n// renderer\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(400, 400);\ndocument.getElementById('container').appendChild(renderer.domElement);\n \n// camera : If you cange the renderer setSize, update the aspect calculation below (400/400)\nvar camera = new THREE.PerspectiveCamera(45, 400 / 400, 1, 1000);\ncamera.position.z = 500;\n \n// scene\nvar scene = new THREE.Scene();\n      \n// material\nvar material = new THREE.MeshLambertMaterial({\n        map: THREE.ImageUtils.loadTexture('images_ide/crate.jpg')\n});\n                \n// cube\nvar cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), material);\ncube.overdraw = true;\ncube.rotation.x = Math.PI * 0.1;\nscene.add(cube);\n      \n// add subtle ambient lighting\nvar ambientLight = new THREE.AmbientLight(0xbbbbbb);\nscene.add(ambientLight);\n      \n// directional lighting\nvar directionalLight = new THREE.DirectionalLight(0xffffff);\ndirectionalLight.position.set(1, 1, 1).normalize();\nscene.add(directionalLight);\n \n// start animation\nanimate();\n"
}