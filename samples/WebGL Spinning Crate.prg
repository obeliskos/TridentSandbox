{
  "progName": "WebGL Spinning Crate",
  "htmlText": "<h3>WebGL textured crate using three.JS</h3>\n\n<div id=\"container\"></div>\n",
  "scriptText": "var isIE10 = (navigator.userAgent.indexOf(\"MSIE 10.0;\") != -1); \n\nif (isIE10) alertify.error(\"WebGL is not supported in IE 10 :(\");\n\n// revolutions per second\nvar angularSpeed = 0.2; \nvar lastTime = 0;\n\nsandbox.volatile.vars = {\n\tstopAnim: false\n}\n\nsandbox.events.clean = function() {\n\tsandbox.volatile.vars.stopAnim = true;\n}\n \n// this function is executed on each animation frame\nfunction animate(){\n\t// update\n\tvar time = (new Date()).getTime();\n\tvar timeDiff = time - lastTime;\n\tvar angleChange = angularSpeed * timeDiff * 2 * Math.PI / 1000;\n\tcube.rotation.y += angleChange;\n\tlastTime = time;\n\n\t// render\n\trenderer.render(scene, camera);\n\n\t// request new frame\n\tif (!sandbox.volatile.vars.stopAnim) {\n\t\trequestAnimationFrame(function(){\n\t\t\tanimate();\n\t\t});\n\t}\n}\n \n// renderer\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(400, 400);\ndocument.getElementById('container').appendChild(renderer.domElement);\n \n// camera : If you cange the renderer setSize, update the aspect calculation below (400/400)\nvar camera = new THREE.PerspectiveCamera(45, 400 / 400, 1, 1000);\ncamera.position.z = 500;\n \n// scene\nvar scene = new THREE.Scene();\n      \n// material\nvar material = new THREE.MeshLambertMaterial({\n        map: THREE.ImageUtils.loadTexture('images_ide/crate.jpg')\n});\n                \n// cube\nvar cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), material);\ncube.overdraw = true;\ncube.rotation.x = Math.PI * 0.1;\nscene.add(cube);\n      \n// add subtle ambient lighting\nvar ambientLight = new THREE.AmbientLight(0xbbbbbb);\nscene.add(ambientLight);\n      \n// directional lighting\nvar directionalLight = new THREE.DirectionalLight(0xffffff);\ndirectionalLight.position.set(1, 1, 1).normalize();\nscene.add(directionalLight);\n \n// start animation\nanimate();\n"
}