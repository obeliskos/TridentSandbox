{
  "progName": "jqPlot Demo",
  "htmlText": "<h3>jqPlot Demos</h3>\nOther chart types might require including other scripts in main Trident page<br/>\n<a href=\"libraries/jqplot/examples/index.html\" target=\"_blank\">See more examples here</a>\n\n<div id=\"chart1\" style=\"height:300px; width:500px;\"></div>\n<div id=\"chart2\" style=\"height:300px; width:500px;\"></div>\n<div id=\"chart3\" style=\"height:300px; width:700px;\"></div>\n",
  "scriptText": "// Pie Chart Example  \nvar data = [\n    ['Heavy Industry', 12],['Retail', 9], ['Light Industry', 14], \n    ['Out of home', 16],['Commuting', 7], ['Orientation', 9]\n];\n\nvar plot1 = jQuery.jqplot ('chart1', [data], \n                           { \n    seriesDefaults: {\n        // Make this a pie chart.\n        renderer: jQuery.jqplot.PieRenderer, \n        rendererOptions: {\n            // Put data labels on the pie slices.\n            // By default, labels show the percentage of the slice.\n            showDataLabels: true\n        }\n    }, \n    legend: { show:true, location: 'e' }\n});\n\n// Line Chart example \nvar plot2 = $.jqplot ('chart2', [[3,7,9,1,4,6,8,2,5]], {\n    // Give the plot a title.\n    title: 'Plot With Options',\n    // You can specify options for all axes on the plot at once with\n    // the axesDefaults object.  Here, we're using a canvas renderer\n    // to draw the axis label which allows rotated text.\n    axesDefaults: {\n        labelRenderer: $.jqplot.CanvasAxisLabelRenderer\n    },\n    // An axes object holds options for all axes.\n    // Allowable axes are xaxis, x2axis, yaxis, y2axis, y3axis, ...\n    // Up to 9 y axes are supported.\n    axes: {\n        // options for each axis are specified in seperate option objects.\n        xaxis: {\n            label: \"X Axis\",\n            // Turn off \"padding\".  This will allow data point to lie on the\n            // edges of the grid.  Default padding is 1.2 and will keep all\n            // points inside the bounds of the grid.\n            pad: 0\n        },\n        yaxis: {\n            label: \"Y Axis\"\n        }\n    }\n});\n\n// Bar Chart Example\nvar s1 = [200, 600, 700, 1000];\nvar s2 = [460, -210, 690, 820];\nvar s3 = [-260, -440, 320, 200];\n// Can specify a custom tick Array.\n// Ticks should match up one for each y value (category) in the series.\nvar ticks = ['May', 'June', 'July', 'August'];\n\nvar plot1 = $.jqplot('chart3', [s1, s2, s3], {\n    // The \"seriesDefaults\" option is an options object that will\n    // be applied to all series in the chart.\n    seriesDefaults:{\n        renderer:$.jqplot.BarRenderer,\n        rendererOptions: {fillToZero: true}\n    },\n    // Custom labels for the series are specified with the \"label\"\n    // option on the series option.  Here a series option object\n    // is specified for each series.\n    series:[\n        {label:'Hotel'},\n        {label:'Event Regristration'},\n        {label:'Airfare'}\n    ],\n    // Show the legend and put it outside the grid, but inside the\n    // plot container, shrinking the grid to accomodate the legend.\n    // A value of \"outside\" would not shrink the grid and allow\n    // the legend to overflow the container.\n    legend: {\n        show: true,\n        placement: 'outsideGrid'\n    },\n    axes: {\n        // Use a category axis on the x axis and use our custom ticks.\n        xaxis: {\n            renderer: $.jqplot.CategoryAxisRenderer,\n            ticks: ticks\n        },\n        // Pad the y axis just a little so bars can get close to, but\n        // not touch, the grid boundaries.  1.2 is the default padding.\n        yaxis: {\n            pad: 1.05,\n            tickOptions: {formatString: '$%d'}\n        }\n    }\n});\n\n"
}