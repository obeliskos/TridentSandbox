{
  "progName": "HTML 5 Starfield Fullscreen",
  "htmlText": "<!-- Modified to allow fullscreen, tap or click starfield to exit fullscreen  \n\n     Attempting to go fullscreen in mousedown of canvas did not work so i added a button click event.\n     That is probably security preventing random script from going fullscreen\n-->\n\n<h3>Html 5 Canvas Starfield Simulation</h3>\n\n<button style=\"height:40px\" onclick=\"goFullscreen()\">Fullscreen</button>\n<br/>\n<CANVAS id=\"canvas\"></CANVAS>\n\n",
  "scriptText": "// shim layer with setTimeout fallback\n// from http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nwindow.requestAnimFrame = (function(){\n    return  window.requestAnimationFrame       || \n        window.webkitRequestAnimationFrame || \n        window.mozRequestAnimationFrame    || \n        window.oRequestAnimationFrame      || \n        window.msRequestAnimationFrame     || \n        function( callback ){\n        window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\n// just going to cleanup these reference variables to prevent\n// conflicts, the other variables are simple datatypes and can be overrideen\nvar sandboxVars = {\n    canvas: document.getElementById(\"canvas\"),\n    c: canvas.getContext(\"2d\"),\n    // kick off animation immediately\n    animate: true\n};\n\nsandbox.events.clean = function() {\n    sandboxVars.animate = false;    // flag to stop animation loop\n\n    // This may need adjusting - currently TridentSandbox waits 500ms for this\n    // function to run before cleaning it out, for low fps animation loops this\n    // may not be enough to stop the loop before deleting variables it depends on.\n    // We will wait 150ms until next animation frame completes and then clean up canvas and\n    // context should be fine even on machines only getting about 3 fps\n    setTimeout(function() {\n        delete sandboxVars.animate;\n        delete sandboxVars.canvas;\n        delete sandboxVars.c;\n    }, 300);\n};\n\nvar numStars = 1000;\nvar radius = 1;\nvar focalLength = sandboxVars.canvas.width;\n\nvar centerX, centerY;\n\nvar stars = [], star;\nvar i;\n\nvar winWidth = 700;\nvar winHeight = 400;\n\ninitializeStars();\n\nfunction executeFrame(){\n    if(sandboxVars.animate)\n        requestAnimFrame(executeFrame);\n    moveStars();\n    drawStars();\n}\n\nfunction initializeStars(){\n    centerX = sandboxVars.canvas.width / 2;\n    centerY = sandboxVars.canvas.height / 2;\n\n    stars = [];\n    for(i = 0; i < numStars; i++){\n        star = {\n            x: Math.random() * sandboxVars.canvas.width,\n            y: Math.random() * sandboxVars.canvas.height,\n            z: Math.random() * sandboxVars.canvas.width\n        };\n        stars.push(star);\n    }\n}\n\nfunction moveStars(){\n    for(i = 0; i < numStars; i++){\n        star = stars[i];\n        star.z--;\n\n        if(star.z <= 0){\n            star.z = sandboxVars.canvas.width;\n        }\n    }\n}\n\nfunction drawStars(){\n    var pixelX, pixelY, pixelRadius;\n\n    // Resize to the screen\n    //if(canvas.width != window.innerWidth || canvas.width != window.innerWidth){\n    //  canvas.width = window.innerWidth;\n    //  canvas.height = window.innerHeight;\n    //  initializeStars();\n    //}\n    if(sandboxVars.canvas.width != winWidth ){\n        sandboxVars.canvas.width = winWidth;\n        sandboxVars.canvas.height = winHeight;\n        initializeStars();\n    }\n\n    sandboxVars.c.fillStyle = \"black\";\n    sandboxVars.c.fillRect(0,0, sandboxVars.canvas.width, sandboxVars.canvas.height);\n    sandboxVars.c.fillStyle = \"white\";\n    for(i = 0; i < numStars; i++){\n        star = stars[i];\n\n        pixelX = (star.x - centerX) * (focalLength / star.z);\n        pixelX += centerX;\n        pixelY = (star.y - centerY) * (focalLength / star.z);\n        pixelY += centerY;\n        pixelRadius = radius * (focalLength / star.z);\n\n        sandboxVars.c.beginPath();\n        sandboxVars.c.arc(pixelX, pixelY, pixelRadius, 0, 2 * Math.PI);\n        sandboxVars.c.fill();\n    }\n}\n\n//canvas.addEventListener(\"mousemove\",function(e){\n//  focalLength = e.x;\n//});\n\n// Kick off the animation when the mouse enters the canvas\n//canvas.addEventListener('mouseover', function(e){\n//  animate = true;\n//  executeFrame();\n//});\n\n// Pause animation when the mouse exits the canvas\n//canvas.addEventListener(\"mouseout\",function(e){\n//  mouseDown = false;\n//  animate = false;\n//});\n\nsandboxVars.canvas.addEventListener(\"mousedown\",function(e){\n    sandbox.ui.fullscreenExit();\n\n    if(sandboxVars.canvas.width != 700){\n        winWidth = 700;\n        winHeight = 400;\n        sandboxVars.canvas.width = 700;\n        sandboxVars.canvas.height = 400;\n        initializeStars();\n    }\n});\n\nfunction goFullscreen()\n{\n    sandbox.ui.fullscreen(sandboxVars.canvas);\n    winWidth = window.innerWidth;\n    winHeight = window.innerHeight;\n    sandboxVars.canvas.width = window.innerWidth;\n    sandboxVars.canvas.height = window.innerHeight;\n    initializeStars();\n}\n\n// Draw the first frame to start animation\nexecuteFrame();"
}