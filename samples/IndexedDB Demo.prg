{
  "progName": "IndexedDB Demo",
  "htmlText": "<h3>IndexedDB Demo</h3>\n<p>This program demonstrates the use of the TridentSandbox IndexedDB 'shim' API.  If all \n  you need from indexedDb is a key/value store, then this api will suffice.  If you \nwant to implement your own object store, you may examine the TridentSandbox.htm main page \nitself to see how those methods are implemented.  TridentSandbox uses this shim API for \n  Load/Save program slots.  This API should also be well suited for medium-sized in-memory \n  databases or other serialized objects.</p>\n\nList of objects for this 'IndexDBApp' app :\n<select id=\"selObjects\" onchange=\"objectSelected()\"></select><br/><br/>\n\n<h4>App : 'IndexDBApp'</h4>\n\n<h4>Key :</h4>\n<input type='text' id='txtNewKey'></input>\n\n<h4>Value :</h4>\n<textarea spellcheck='false' rows='10' cols='60' id=\"txtNewValue\"></textarea><br/><br/>\n\n<button onclick=\"newObject()\">New</button>\n<button onclick=\"updateObject()\">Update</button>\n<button onclick=\"deleteObject()\">Delete</button>\n\n",
  "scriptText": "if (!indexedDB) {\n\talertify.alert(\"IndexedDB is not available unless you are Hosting Trident Sandbox or it is AppCached\");\n}\nelse {\n\tAPI_SetToolbarMode(false, false, true);\n\tretrieveAllAppKeys();\n}\n  \n\n// Just visually clear the key and value text fields and set the dropdown to the empty item\nfunction newObject()\n{\n  \t$(\"#selObjects\").val(\"\");\n   \t$(\"#txtNewKey\").val(\"\");\n  \t$(\"#txtNewValue\").val(\"\");\n}\n\n// Add or update the App(hardcoded)/Key/Value \nfunction updateObject()\n{\n   \tvar key = $(\"#txtNewKey\").val();\n  \tvar val = $(\"#txtNewValue\").val();\n\n  \tAPI_SetIndexedAppKey('IndexDBApp', key, val);\n  \n\tsetTimeout(function () { retrieveAllAppKeys() }, 250);\n}\n\n// The dropdown item selected has the objectId stored as its value\n// call api function to delete that id (note it must be integer not string, so i use parseInt)\nfunction deleteObject() {\n   \tvar objId = $(\"#selObjects option:selected\").val();\n\n\t// confirm object deletion\n\talertify.confirm(\"Are you sure you want to delete object with id \" + objId, function (e) {\n    \t\tif (e) {\n        \t\t// user clicked \"ok\"\n              \tAPI_DelIndexedAppKey(parseInt(objId));\n              \n              \tsetTimeout(function () { retrieveAllAppKeys() }, 250);\n    \t\t}\n\t});\n\n}\n\n// when user changes dropdown selection, get the whole object and update text fields\nfunction objectSelected() {\n   \tvar objId = $(\"#selObjects option:selected\").val();\n\n  \tAPI_GetIndexedAppKeyById(parseInt(objId), function(e) {\n\t\tvar res = e.target.result;\n      \t$(\"#txtNewKey\").val(res.key);\n      \t$(\"#txtNewValue\").val(res.val);\n    });\n}\n\n// Show all Trident App/Key/Val objects filtered by our app name ('TridentSandboxApp') \n// We call API_GetIndexedAppCursor passing our app name and callback\n// Our callback is called for every object and we must manually advance the cursor.\nfunction retrieveAllAppKeys()\n{\n    $(\"#selObjects\").html(\"<option></option>\");\n  \t$(\"#txtNewKey\").val(\"\");\n  \t$(\"#txtNewValue\").val(\"\");\n  \n  \t// The anonymous function callback is called once per row returned \n\tAPI_GetIndexedAppCursor('IndexDBApp', function(e) {\n\t  \tvar cursor = e.target.result;\n      \n\t\tif(cursor) {\n          \tvar currObject = cursor.value;\n          \n\t\t\t$('#selObjects').append($('<option>', {\n    \t\t\tvalue: currObject.id,\n    \t\t\ttext: currObject.key\n\t\t\t}));          \n          \n            cursor.continue();\n\t\t}\n      \n\t});\n}\n\n"
}