{
  "progName": "LokiJS QueryPerf",
  "htmlText": "<h3>\nLoki performance test\n</h3>\n\n<div style=\"width:600px;height:400px\" id=\"chart1\">\n\n</div>",
  "scriptText": "// Recommended practice is to place variables in this object and then delete in cleanup\nvar sbv = {\n\tdb: new loki('Autos'),\n    samplecoll: null,\n    arraySize: 2000,\t\t// how large of a dataset to generate\n    totalIterations: 6000,\t// how many times we search it\n    results: [],\n    plot1: null\n}\n\nfunction EVT_CleanSandbox()\n{\n\tif (sbv.plot1) sbv.plot1.destroy();\n    sbv.samplecoll = null;\n    delete sbv.samplecoll;\n    sbv.db = null;\n\tdelete sbv.db;\n    delete sbv.results;\n    sbv.plot1 = null;\n    delete sbv.plot1;\n    sbv = null;\n}\n\nfunction genRandomVal()\n{\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for( var i=0; i < 20; i++ )\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n}\n\n// in addition to the loki id we will create a key of our own\n// (customId) which is number from 1- totalIterations\n// we will later perform find() queries against customId with and \n// without an index\nfunction initializeDB() {\n\tsbv.db = new loki('sample');\n  \n\tsbv.samplecoll = sbv.db.addCollection('samplecoll', 'samplecoll');\n\n\tfor (var idx=0; idx < sbv.arraySize; idx++) {\n    \tsbv.samplecoll.insert({ \n\t\t\tcustomId: idx, \n\t\t\tval: genRandomVal(), \n\t\t\tval2: genRandomVal(), \n\t\t\tval3: \"more data 1234567890\"\n\t\t});\n    }\n}\n\nfunction testperf() {\n    var totalTime = 0.0, avgTime = 0.0;\n\tvar start, end;\n\n\tfor (var idx=0; idx < sbv.totalIterations; idx++) {\n    \tvar customidx = Math.floor(Math.random() * sbv.arraySize) + 1;\n        \n\t\tstart = performance.now();\n        var results = sbv.samplecoll.find({ 'customId': customidx });\n\t\tend = performance.now();\n        \n        totalTime += end-start;\n    }\n    \n    //avgTime = totalTime / sbv.totalIterations;\n    \n    sbv.results.push(totalTime);\n}\n\nfunction plotresults() {\n\t$.jqplot.config.enablePlugins = true;\n\tvar s1 = sbv.results;\n\tvar ticks = ['without index', 'without idx pass 2', 'with index', 'with idx pass 2'];\n         \n\tif (sbv.plot1) { \n    \tsbv.plot1.destroy();\n        sbv.plot1 = null;\n    }\n    \n\tsbv.plot1 = $.jqplot('chart1', [s1], {\n\t\t// Only animate if we're not using excanvas (not in IE 7 or IE 8)..\n        title: 'Time to complete ' + sbv.totalIterations + ' loki find() operations (in milliseconds)',\n\t\tanimate: !$.jqplot.use_excanvas,\n\t\tseriesDefaults:{\n\t\t\trenderer:$.jqplot.BarRenderer,\n\t\t\tpointLabels: { show: true }\n\t\t},\n\t\taxes: {\n\t\t\txaxis: {\n\t\t\t\trenderer: $.jqplot.CategoryAxisRenderer,\n\t\t\t\tticks: ticks\n\t\t\t},\n            yaxis: {\n            \tmin: 0,\n            \tmax: s1[0]*1.25,\n            \ttickOptions: {\n                \tformatString: \"%#.5f\"\n                }\n            }\n\t\t},\n\t\thighlighter: { show: true }\n\t});\n}\n\n\ninitializeDB();\n\ntestperf();\ntestperf();\nsbv.samplecoll.ensureIndex(\"customId\");\ntestperf();\ntestperf();\n\nplotresults();"
}