{
  "progName": "Hosted Files Database",
  "htmlText": "<h3>Hosted File Database</h3>\n\nPick file(s) from local filesystem to import to TridentDB : \n<input style='height:30px;width:200px;' id='customFile' type=\"file\" name=\"customFile\" onchange=\"custom_load()\" multiple />\n<br/><br/>\n<br/>\n\n\n",
  "scriptText": "// This program lets you import files from your local filesystem into the \n// TridentDB (for hosted/appcached environments only). We are storing them  \n// with an app name of 'TridentFiles' and for the key we use the filename\n// We can then get these files (as a dataurl) and use them within any of our programs.\n// DataURL is base64 encoded which adds overhead, so monitor consumption within\n// the 'Trident DB Usage.prg' program.\n// This is intended mainly for images but the dataurl adds the mime type into the \n// encoding so you can determine exactly what type of file it contains by either\n// the filename (key) or the dataurl itself (starting bytes of val)\n\nfunction custom_load()\n{\n\tvar pickedFiles = $(\"#customFile\")[0].files;\n    \n\tfor(i=0; i<pickedFiles.length; i++) {\n\t\tvar pfile = pickedFiles[i];//document.getElementById('customFile').files[0];\n        \n\t\tvar reader = new FileReader();\n       \treader.onload = (function(loadedFile) {\n        \tvar loadedName = loadedFile.name;\n            return function(evt) {\n        \t\tAPI_SetIndexedAppKey(\"TridentFiles\", loadedName, evt.target.result);\n            };\n        })(pfile);\n        \n\t\treader.onerror = function(evt) {\n\t\t\talertify.error(\"error\");\n       \t};\n\n\t\treader.readAsDataURL(pfile, \"UTF-8\");\n\n\t}\n}\n\n// Here is how you might retrieve and use an image uploaded by the above method \n\n//API_GetIndexedAppKey(\"TridentFiles\", \"myimage.jpg\", function(e) {\n//\tvar img = new Image;\n//\timg.src = e.target.result.val;\t// e.target.result is trident db obj\n//\tdocument.getElementById('UI_MainPlaceholder').appendChild(img);     \n//});\n"
}